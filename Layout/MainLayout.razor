@using System.Globalization
@using PersonalWebSite.Components
@inherits LayoutComponentBase
@inject ILocalStorageService localStorage
@inject IJSRuntime JS
@inject ISnackbar SnackbarService
@inject NavigationManager Navigation

<MudThemeProvider Theme="MyCustomTheme" IsDarkMode=@_isDarkMode/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar id="appbar" Fixed=true DisableGutters=false Elevation="3" Dense="true">
        <AppBarItems></AppBarItems>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert=true>
            <MudIconButton OnClick="@ToggleDrawer" Icon="@Icons.Material.Outlined.Menu" Size=Size.Medium Style="color:burlywood;" Class="mr-5" />
            <MudSpacer />
        </MudHidden>
        <ThemeSelector darkModeChanged="@darkModeChanged" />
    </MudAppBar>

    <MudHidden Breakpoint="Breakpoint.Xs" Invert=true>
        <MudDrawer Width="50%" Color=Color.Dark ClipMode="DrawerClipMode.Docked" @bind-Open="@open" Elevation="1">
            <MudDrawerHeader Style="align-self:center">
                <MudButton Class="rounded-pill" OnClick=homeIconClicked>
                    <MudImage Fluid=true Class="rounded-pill" Src="/Icons/codeIcon-removebg.png" Width="32"></MudImage>
                </MudButton>
            </MudDrawerHeader>
            <MudNavMenu Class="mud-width-full" Margin="Margin.Normal">
                <MudNavLink Href="#jobs" Match="NavLinkMatch.All">
                    <MudText Color=Color.Primary Align=Align.Center Typo=Typo.h6>
                        Experience
                    </MudText>
                </MudNavLink>
                <MudNavLink Href="#skills" Match="NavLinkMatch.All">
                    <MudText Color=Color.Primary Align=Align.Center Typo=Typo.h6>
                        Skills
                    </MudText>
                </MudNavLink>
                <MudNavLink Href="#projects" Match="NavLinkMatch.All">
                    <MudText Color=Color.Primary Align =Align.Center Typo=Typo.h6>
                        Projects
                    </MudText>
                </MudNavLink>
                <MudNavLink Href="#contact" Match="NavLinkMatch.All">
                    <MudText Color=Color.Primary Align =Align.Center Typo=Typo.h6>
                        Contact
                    </MudText>
                </MudNavLink>
            </MudNavMenu>
        </MudDrawer>
    </MudHidden>
    

    <MudMainContent Style="overflow:hidden">
        @Body
    </MudMainContent>

    <MudScrollToTop OnClick=navto Style="margin:20px; z-index:2001;">
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert=true>
            <MudFab Size="Size.Medium" Style="color:burlywood" IconSize="Size.Large" StartIcon="@Icons.Material.Filled.KeyboardArrowUp" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.Xs" Invert=true>
            <MudFab Size="Size.Small" Style="color:burlywood" IconSize="Size.Large" StartIcon="@Icons.Material.Filled.KeyboardArrowUp" />
        </MudHidden>
    </MudScrollToTop>

</MudLayout>

@code {
    private bool _isDarkMode;
    bool open = false;

    private void homeIconClicked()
    {
        Navigation.NavigateTo("/", forceLoad: true);
    }

    void ToggleDrawer()
    {
        open = !open;
    }

    MudTheme MyCustomTheme = new MudTheme()
    {
        Palette = new PaletteLight()
        {
            ActionDefault = Colors.Teal.Darken4,
            Primary = Colors.Teal.Darken4,
            Secondary = Colors.Teal.Default,
            AppbarBackground = Colors.Teal.Lighten1,
            Background = Colors.Teal.Lighten5,
            Divider = Colors.Teal.Darken2,
            Surface = Colors.Teal.Lighten5,
            Dark = Colors.Teal.Default

        },
        PaletteDark = new PaletteDark()
        {
            ActionDefault = Colors.BlueGrey.Darken4,
            Primary = Colors.BlueGrey.Lighten5,
            Secondary = Colors.Grey.Default,
            AppbarBackground = Colors.BlueGrey.Darken4,
            Background = Colors.BlueGrey.Darken3,
            Divider = Colors.BlueGrey.Lighten2,
            Surface = Colors.BlueGrey.Darken3,
            Dark = Colors.BlueGrey.Darken4
        },

        // Typography = new Typography()
        // {
        //     Default = new Default()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "3vmax",
        //         FontWeight = 500,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     Body1 = new Body1()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "2.5vmax",
        //         FontWeight = 500,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     Body2 = new Body2()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "2vmax",
        //         FontWeight = 400,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     H4 = new H4()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "3vmax",
        //         FontWeight = 400,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     H5 = new H5()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "2.5vmax",
        //         FontWeight = 400,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     }

        // },
    };

    protected override async Task OnInitializedAsync()
    {
        await JS.InvokeVoidAsync("scrollFunctionality");
    }

    private void darkModeChanged(bool isDarkMode)
    {
        _isDarkMode = isDarkMode;
    }

    private void navto()
    {
        Navigation.NavigateTo("/", forceLoad: false);
    }

}