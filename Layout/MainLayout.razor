@using System.Globalization
@using PersonalWebSite.Components
@using PersonalWebSite.SharedState
@inherits LayoutComponentBase
@inject ILocalStorageService localStorage
@inject IJSRuntime JS
@inject ISnackbar SnackbarService
@inject NavigationManager Navigation
@inject StateContainer State

<MudThemeProvider Theme="MyCustomTheme" IsDarkMode=State.DarkModeIsOn/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar id="appbar" Fixed=true DisableGutters=false Elevation="3" Dense="true">
        <AppBarItems></AppBarItems>
    </MudAppBar>
    <SideBar></SideBar>
    <MudMainContent Style="overflow:hidden">
        @Body
    </MudMainContent>
    <ScrollToTop></ScrollToTop>
</MudLayout>


@code {

    protected override async Task OnInitializedAsync()
    {
        await State.ScrollFunctionality();
        State.DarkModeStateChanged += StateHasChanged;
    }


    MudTheme MyCustomTheme = new MudTheme()
    {
        Palette = new PaletteLight()
        {
            ActionDefault = Colors.Teal.Darken4,
            Primary = Colors.Teal.Darken4,
            Secondary = Colors.Teal.Default,
            AppbarBackground = Colors.Teal.Lighten1,
            Background = Colors.Teal.Lighten5,
            Divider = Colors.Teal.Darken2,
            Surface = Colors.Teal.Lighten5,
            Dark = Colors.Teal.Default

        },
        PaletteDark = new PaletteDark()
        {
            ActionDefault = Colors.BlueGrey.Darken4,
            Primary = Colors.BlueGrey.Lighten5,
            Secondary = Colors.Grey.Default,
            AppbarBackground = Colors.BlueGrey.Darken4,
            Background = Colors.BlueGrey.Darken3,
            Divider = Colors.BlueGrey.Lighten2,
            Surface = Colors.BlueGrey.Darken3,
            Dark = Colors.BlueGrey.Darken4
        },

        // Typography = new Typography()
        // {
        //     Default = new Default()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "3vmax",
        //         FontWeight = 500,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     Body1 = new Body1()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "2.5vmax",
        //         FontWeight = 500,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     Body2 = new Body2()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "2vmax",
        //         FontWeight = 400,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     H4 = new H4()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "3vmax",
        //         FontWeight = 400,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     },
        //     H5 = new H5()
        //     {
        //         FontFamily = new[] { "sans-serif" },
        //         FontSize = "2.5vmax",
        //         FontWeight = 400,
        //         LineHeight = 1.6,
        //         LetterSpacing = ".0075em"
        //     }

        // },
    };
    
}