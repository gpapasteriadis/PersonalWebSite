@inject MudLocalizer localizer
@inject IConfiguration config
@inject MudTheme theme

<MudHidden Breakpoint="Breakpoint.SmAndUp" Invert=true>
    <MudCard id="projects" Elevation="2" Style="margin-top:80px; width:85%; margin-inline:auto;">
        <MudCardContent>
            <MudText Style="margin-bottom:40px;" Align="Align.Center" Color="Color.Primary" Typo=TitleTypo1()>
                <b>Some projects</b>
            </MudText>
            <MudTabs Style="margin:10px; width:100%;" MinimumTabWidth="20px" Position="Position.Left">
                <MudTabPanel Text="Personal Website" Style=@($"font-size: {TitleTypo2FontSize()}") Icon=@projectIcon>
                    <MudCard Outlined=true Class="rounded-xl" Style="margin-left:10px; width:95%;">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>My First Personal Website</u></MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Target="_blank" Href="@(config.GetValue<String>("Projects:PersonalWebsite_Git"))" Color="Color.Primary" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent Style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                            <MudText Style="margin-left:15px; margin-right:15px;" Color=Color.Primary Typo=@DescTypo()>
                                Built using Blazor with .NET 8 and the MudBlazor library. A dynamic
                                client-side web application that adapts effortlessly to any screen, whether you're browsing on a desktop, tablet, or smartphone.<br>

                                Hosted on Microsoft Azure using the Static Web Apps service.<br>

                                The codebase stored on GitHub, leveraging GitHub Actions for Continuous Integration and Continuous Development (CI/CD),
                                which helps updates and enhancements roll out seamlessly.
                            </MudText>
                        </MudCardContent>
                        <MudCardActions class="d-flex flex-wrap" Style="margin-left:15px;">
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                .NET8
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                Blazor WebAssembly
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                MudBlazor
                            </MudText>
                        </MudCardActions>
                    </MudCard>
                </MudTabPanel>

                <MudTabPanel Text="Mobile App" Style=@($"font-size: {TitleTypo2FontSize()}") Icon=@projectIcon>
                    <MudCard Outlined=true Class="@flipCardClass" Style="margin-left:10px; width:95%;">
                        <MudCardHeader hidden="@(!showMobileAppCardImages)">
                            <CardHeaderContent>
                                <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>Android/iOS Mobile App</u></MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Material.Rounded.Image" Title="Click to see sample images" OnClick=RotateMobileAppCard Size=Size.Medium Color="Color.Primary" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent hidden="@(!showMobileAppCardImages)" Style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                            <MudText Style="margin-left:15px; margin-right:15px;" Color=Color.Primary Typo=@DescTypo()>
                                As a freelancer, I undertook a one-month project to develop a mobile application, using the following technologies:<br />
                                <b>Frontend Development:</b> Leveraging the Ionic Framework integrated with Angular, I crafted dynamic user interfaces for seamless experiences across both Android and iOS platforms.<br />
                                <b>Backend Infrastructure:</b> In the backend, I employed Apollo GraphQL and nestJS to build a robust system. MongoDB was utilized for efficient data storage and retrieval.<br />
                                <b>Deployment:</b> Deployment was done on DigitalOcean using Docker containers. This approach allowed for agile packaging and deployment.
                            </MudText>
                        </MudCardContent>
                        <MudCardActions class="d-flex flex-wrap" hidden="@(!showMobileAppCardImages)" Style="margin-left:15px;">
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                Ionic Framework
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                Angular
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                NestJS
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                Apollo GraphQL
                            </MudText>
                        </MudCardActions>
                        <MudCardHeader hidden="@showMobileAppCardImages">
                            <CardHeaderContent>
                                <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>Android/iOS Mobile App - Sample Images/Video</u></MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Material.Rounded.ArrowBack" Title="Flip back" OnClick=RotateMobileAppCard Size=Size.Medium Color="Color.Primary" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent hidden="@showMobileAppCardImages" Class="gap-4 d-flex flex-wrap justify-content-center">
                            <video class="rounded-lg ma-2" controls="controls" width="250" height="430px">
                                <source src="/Video/FoodWastApp.mp4" />
                            </video>
                            <MudImage Fluid=true Class="rounded-lg ma-2" Src="/Icons/1.png" ObjectFit="ObjectFit.Cover" Width="250" Height="280" Elevation="15" />
                            <MudImage Fluid=true Class="rounded-lg ma-2" Src="/Icons/2.png" ObjectFit="ObjectFit.Cover" Width="250" Height="280" Elevation="15" />
                        </MudCardContent>
                    </MudCard>
                </MudTabPanel>

                <MudTabPanel Text="Project Name" Style=@($"font-size: {TitleTypo2FontSize()}") Icon=@projectIcon>
                    <MudCard Outlined=true Class="rounded-xl" Style="margin-left:10px; width:95%;">
                        <MudCardHeader>
                            <CardHeaderContent>
                                <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>Project Name</u></MudText>
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Target="_blank" Disabled=true Href="@(config.GetValue<String>("Projects:NewProject_Git"))" Color="Color.Primary" />
                                <MudIconButton Icon="@Icons.Material.Filled.OpenInNew" Target="_blank" Disabled=true Href="@(config.GetValue<String>("Projects:NewProject_Git"))" Color="Color.Primary" />
                            </CardHeaderActions>
                        </MudCardHeader>
                        <MudCardContent Style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                            <MudText Style="margin-left:15px; margin-right:15px;" Color=Color.Primary Typo=@DescTypo()>
                               !!! Will be filled later on !!!
                            </MudText>
                        </MudCardContent>
                        <MudCardActions class="d-flex flex-wrap">
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                .NET8
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                Blazor
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                Entity Framework Core
                            </MudText>
                            <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                                Identity Framework
                            </MudText>
                        </MudCardActions>
                    </MudCard>
                </MudTabPanel>
            </MudTabs>
            
        </MudCardContent>
    </MudCard>
</MudHidden>



<MudHidden Breakpoint="Breakpoint.Xs" Invert=true>
    <MudCard id="projects" Elevation="2" Style="margin-top:80px; width:100%; margin-inline:auto;">
        <MudCardContent>
            <MudText Style="margin-bottom:40px;" Align="Align.Center" Color="Color.Primary" Typo="Typo.h4">
                <b>Some projects</b>
            </MudText>

            <MudCard Outlined=true Class="rounded-xl" Style="margin-bottom:40px;">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>My First Personal Website</u></MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Target="_blank" Href="@(config.GetValue<String>("Projects:PersonalWebsite_Git"))" Color="Color.Primary" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent Style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                    <MudText Style="margin-left:15px; margin-right:15px;" Color=Color.Primary Typo=@DescTypo()>
                        Built using Blazor with .NET 8 and the MudBlazor library. A dynamic
                        client-side web application that adapts effortlessly to any screen, whether you're browsing on a desktop, tablet, or smartphone.<br>

                        Hosted on Microsoft Azure using the Static Web Apps service.<br>

                        The codebase stored on GitHub, leveraging GitHub Actions for Continuous Integration and Continuous Development (CI/CD),
                        which helps updates and enhancements roll out seamlessly.
                    </MudText>
                </MudCardContent>
                <MudCardActions Class="d-flex flex-wrap" Style="margin-left:15px;">
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        .NET8
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        Blazor WebAssembly
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        MudBlazor
                    </MudText>
                </MudCardActions>
            </MudCard>

            <MudCard Outlined=true Class="@flipCardClass" Style="margin-bottom:40px;">
                <MudCardHeader hidden="@(!showMobileAppCardImages)">
                    <CardHeaderContent>
                        <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>Android/iOS Mobile App</u></MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Rounded.Image" Title="Click to see sample images" OnClick=RotateMobileAppCard Size=Size.Medium Color="Color.Primary" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent hidden="@(!showMobileAppCardImages)" Style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                    <MudText Style="margin-left:15px; margin-right:15px;" Color=Color.Primary Typo=@DescTypo()>
                        As a freelancer, I undertook a one-month project to develop a mobile application, using the following technologies:<br />
                        <b>Frontend Development:</b> Leveraging the Ionic Framework integrated with Angular, I crafted dynamic user interfaces for seamless experiences across both Android and iOS platforms.<br />
                        <b>Backend Infrastructure:</b> In the backend, I employed Apollo GraphQL and nestJS to build a robust system. MongoDB was utilized for efficient data storage and retrieval.<br />
                        <b>Deployment:</b> Deployment was done on DigitalOcean using Docker containers. This approach allowed for agile packaging and deployment.
                    </MudText>
                </MudCardContent>
                <MudCardActions Class="d-flex flex-wrap" hidden="@(!showMobileAppCardImages)" Style="margin-left:15px;">
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        Ionic Framework
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        Angular
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        NestJS
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        Apollo GraphQL
                    </MudText>
                </MudCardActions>
                <MudCardHeader hidden="@showMobileAppCardImages">
                    <CardHeaderContent>
                        <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>Android/iOS Mobile App - Sample Images/Video</u></MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Material.Rounded.ArrowBack" Title="Flip back" OnClick=RotateMobileAppCard Size=Size.Medium Color="Color.Primary" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent hidden="@showMobileAppCardImages" Class="gap-4 d-flex flex-wrap justify-content-center">
                    <video class="rounded-lg ma-2" controls="controls" width="250px" height="350px">
                        <source src="/Video/FoodWastApp.mp4" />
                    </video>
                    <MudImage Fluid=true Class="rounded-lg ma-2" Src="/Icons/1.png" ObjectFit="ObjectFit.Cover" Width="250" Height="280" Elevation="15" />
                    <MudImage Fluid=true Class="rounded-lg ma-2" Src="/Icons/2.png" ObjectFit="ObjectFit.Cover" Width="250" Height="280" Elevation="15" />
                </MudCardContent>
            </MudCard>

            <MudCard Outlined=true Class="rounded-xl">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Style="display:flex; flex-direction:column; justify-content:center; align-items:center;" Color=Color.Primary Typo=@TitleTypo2()><u>Project Name</u></MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Target="_blank" Href="@(config.GetValue<String>("Projects:NewProject_Git"))" Color="Color.Primary" />
                        <MudIconButton Icon="@Icons.Material.Filled.OpenInNew" Target="_blank" Href="@(config.GetValue<String>("Projects:NewProject_Git"))" Color="Color.Primary" />
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent Style="display:flex; flex-direction:column; justify-content:center; align-items:center;">
                    <MudText Style="margin-left:15px; margin-right:15px;" Color=Color.Primary Typo=@DescTypo()>
                        !!! Will be filled later on !!!
                    </MudText>
                </MudCardContent>
                <MudCardActions Class="d-flex flex-wrap" Style="margin-left:15px;">
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        .NET8
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        Blazor
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        Entity Framework Core
                    </MudText>
                    <MudText Style="margin-inline:10px;" Typo="Typo.caption">
                        Identity Framework
                    </MudText>
                </MudCardActions>
            </MudCard>

        </MudCardContent>
    </MudCard>
</MudHidden>



@code {
    [CascadingParameter]
    protected Breakpoint breakpoint { get; set; }

    private string projectIcon = @"<svg fill=""#000000"" viewBox=""0 0 24 24"" id=""file-done-2"" data-name=""Flat Color"" xmlns=""http://www.w3.org/2000/svg"" class=""icon flat-color""><path id=""primary"" d=""M17.71,6.29l-4-4A1,1,0,0,0,13,2H4A2,2,0,0,0,2,4V20a2,2,0,0,0,2,2h8.42A5,5,0,0,1,16,15.11a5,5,0,0,1,2,0s0,0,0,0V7A1,1,0,0,0,17.71,6.29Z"" style=""fill: rgb(0, 0, 0);""></path><path id=""secondary"" d=""M17,22a1,1,0,0,1-.71-.29l-2-2a1,1,0,0,1,1.42-1.42L17,19.59l3.29-3.3a1,1,0,0,1,1.42,1.42l-4,4A1,1,0,0,1,17,22Zm-6-9a1,1,0,0,0-1-1H6a1,1,0,0,0,0,2h4A1,1,0,0,0,11,13Zm4-4a1,1,0,0,0-1-1H6a1,1,0,0,0,0,2h8A1,1,0,0,0,15,9Z"" style=""fill: rgb(44, 169, 188);""></path></svg>";
    private string flipCardClass = "rounded-xl";
    private bool showMobileAppCardImages = true;

    bool ShowEnlargedImage { get; set; }

    private async Task RotateMobileAppCard()
    {

        // Add the animation to the card
        flipCardClass = flipCardClass + " " + "flipInYMobileAppCard";

        await Task.Delay(300);
        showMobileAppCardImages = !showMobileAppCardImages;
        StateHasChanged();

        // Wait for the animation to complete
        await Task.Delay(2100);
        // Remove the animation class after the animation completes
        flipCardClass = "rounded-xl";
    }

    private Typo TitleTypo1()
    {
        var size = breakpoint;

        switch (size)
        {
            case Breakpoint.Xs: // Smartphone
                return Typo.h4;

            case Breakpoint.Sm:// 600px> Tablet <960px
                return Typo.h4;

            case Breakpoint.MdAndUp:// 960px> Tablet/laptop <1280px
                return Typo.h3;

            default: return Typo.h3;
        }
    }

    private Typo TitleTypo2()
    {
        var size = breakpoint;

        switch (size)
        {
            case Breakpoint.Xs: // Smartphone
                return Typo.h6;

            case Breakpoint.Sm:// 600px> Tablet <960px
                return Typo.h5;

            case Breakpoint.MdAndUp:// 960px> Tablet/laptop <1280px
                return Typo.h5;

            default: return Typo.h5;
        }
    }

    private string TitleTypo2FontSize()
    {
        var size = breakpoint;

        switch (size)
        {
            case Breakpoint.Xs: // Smartphone
                return theme.Typography.Body2.FontSize;

            case Breakpoint.Sm:// 600px> Tablet <960px
                return theme.Typography.Body2.FontSize;

            case Breakpoint.MdAndUp:// 960px> Tablet/laptop <1280px
                return theme.Typography.Body1.FontSize;

            default: return theme.Typography.Body1.FontSize;
        }
    }

    private Typo DescTypo()
    {
        var size = breakpoint;
        
        switch (size)
        {
            case Breakpoint.Xs: // Smartphone
                return Typo.body2;

            case Breakpoint.Sm:// 600px> Tablet <960px
                return Typo.body1;

            case Breakpoint.MdAndUp:// 960px> Tablet/laptop <1280px
                return Typo.h6;

            default: return Typo.h6;
        }
    }

}
